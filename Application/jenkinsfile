  pipeline {
    agent any


    stages {
        stage('Checkout Code') {
            steps {
                echo 'scm git'
                git branch: 'main', url: 'https://github.com/saicharan0117/Project_05_CICD_With_Ansible.git'
            }
        }
    	

        stage('BuildingJar') {
            steps {
                echo 'maven build'
                sh 'cd Application && mvn clean package'
            }
        }
		
		
        stage('sonar') {
            steps {
                echo 'scanning project'
                sh 'ls -ltr'
                sh '''cd Application && mvn sonar:sonar \\
                      -Dsonar.host.url=http://3.87.221.16:9000 \\
                      -Dsonar.login=squ_c72faca7245a11728e122d24e61a9b6d374772a6'''
            }
    	}
       stage('Build docker image'){
            steps{
                script{
                    echo 'docker image build'
					sh 'cd Application && docker build -t saicharan117/k8s:${BUILD_NUMBER} .'
                }
            }
        }
		
       stage('docker image scan'){
        steps{
            sh "trivy image saicharan117/k8s:${BUILD_NUMBER}"
        }
    }		
         

		 stage('Push image to Hub'){
            steps{
                script{
                   withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                   sh 'docker login -u saicharan117 -p ${dockerhub}'

              }
                   sh 'docker push saicharan117/k8s:${BUILD_NUMBER}'
                }
            }
        }
		
      stage('Update kubernetes Deployment manifest File') {
        environment {
            GIT_REPO_NAME = "Project_05_CICD_With_Ansible"
            GIT_USER_NAME = "saicharan0117"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "madhu@gmail.com"
                    git config user.name "madhu"
                    BUILD_NUMBER=${BUILD_NUMBER}
                  
                    sed -i "s/k8s:.*/k8s:${BUILD_NUMBER}/g" Ansible/k8s_deployment.yaml
                    git add .
                    git commit -m "Update deployment image tag to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }

    stage('k8s Deployment using ansible'){
            steps{
              
                    script{
                        ansiblePlaybook credentialsId: 'ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/', playbook: 'Ansible/ansible_k8s_deploy_playbook.yaml'
                   
                }
            }
        }
}
}

